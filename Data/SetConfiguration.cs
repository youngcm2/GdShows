// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.51
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

namespace Data
{

    // Set
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.24.0.0")]
    public class SetConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Set>
    {
        public SetConfiguration()
            : this("dbo")
        {
        }

        public SetConfiguration(string schema)
        {
            ToTable("Set", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").IsRequired().HasColumnType("uniqueidentifier").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.ShowId).HasColumnName(@"ShowId").IsRequired().HasColumnType("uniqueidentifier");
            Property(x => x.SetNumber).HasColumnName(@"SetNumber").IsOptional().HasColumnType("tinyint");
            Property(x => x.IsEncore).HasColumnName(@"IsEncore").IsRequired().HasColumnType("bit");

            // Foreign keys
            HasRequired(a => a.Show).WithMany(b => b.Sets).HasForeignKey(c => c.ShowId).WillCascadeOnDelete(false); // FK_Set_Show
        }
    }

}
// </auto-generated>
