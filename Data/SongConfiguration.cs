// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.51
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

namespace Data
{

    // Song
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.24.0.0")]
    public class SongConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Song>
    {
        public SongConfiguration()
            : this("dbo")
        {
        }

        public SongConfiguration(string schema)
        {
            ToTable("Song", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").IsRequired().HasColumnType("uniqueidentifier").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.SetId).HasColumnName(@"SetId").IsRequired().HasColumnType("uniqueidentifier");
            Property(x => x.SongRefId).HasColumnName(@"SongRefId").IsRequired().HasColumnType("uniqueidentifier");
            Property(x => x.Position).HasColumnName(@"Position").IsRequired().HasColumnType("tinyint");
            Property(x => x.IsSegued).HasColumnName(@"IsSegued").IsRequired().HasColumnType("bit");

            // Foreign keys
            HasRequired(a => a.Set).WithMany(b => b.Songs).HasForeignKey(c => c.SetId).WillCascadeOnDelete(false); // FK_Song_Set
            HasRequired(a => a.SongRef).WithMany(b => b.Songs).HasForeignKey(c => c.SongRefId).WillCascadeOnDelete(false); // FK_Song_SongRef
        }
    }

}
// </auto-generated>
